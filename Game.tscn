[gd_scene load_steps=6 format=2]

[ext_resource path="res://StartScreen.tscn" type="PackedScene" id=1]
[ext_resource path="res://Lobby.tscn" type="PackedScene" id=2]
[ext_resource path="res://CombatUI.tscn" type="PackedScene" id=3]
[ext_resource path="res://SpellBook.tscn" type="PackedScene" id=4]

[sub_resource type="GDScript" id=1]

script/source = "extends Node

onready var lobby = $Lobby
onready var combat = $CombatUI
onready var spell_book = $SpellBook

func _ready():
	get_tree().connect(\"network_peer_connected\", self, \"_player_connected\")
	get_tree().connect(\"network_peer_disconnected\", self, \"_player_disconnected\")
	get_tree().connect(\"connected_to_server\", self, \"_connected_ok\")
	get_tree().connect(\"connection_failed\", self, \"_connected_fail\")
	get_tree().connect(\"server_disconnected\", self, \"_server_disconnected\")

# Player info, associate ID to data
var player_info = {}
# Info we send to other players
var my_info = load(\"res://Wizard.tscn\").instance()

func get_player_info(id):
	if player_info.has(id):
		return player_info[id]
	return null

func set_name(name):
	my_info.wiz_name = name

func join(ip, port):
	var peer = NetworkedMultiplayerENet.new()
	peer.create_client(ip, int(port))
	get_tree().set_network_peer(peer)

func host(port):
	var peer = NetworkedMultiplayerENet.new()
	peer.create_server(int(port), 64)
	get_tree().set_network_peer(peer)
	player_info[get_tree().get_network_unique_id()] = my_info
	my_info.name = str(get_tree().get_network_unique_id())
	my_info.set_network_master(get_tree().get_network_unique_id())
	lobby.add_wizard(my_info, true)
	lobby.show()

func _player_connected(id):
	print(\"_player_connected(\" + str(id) + \")\")

func _player_disconnected(id):
	print(\"_player_disconnected(\" + str(id) + \")\")
	player_info.erase(id) # Erase player from info

func _connected_ok():
	print(\"_connected_ok()\")
	my_info.name = str(get_tree().get_network_unique_id())
	my_info.set_network_master(get_tree().get_network_unique_id())
	player_info[get_tree().get_network_unique_id()] = my_info
	lobby.add_wizard(my_info, true)
	lobby.show()
	# Only called on clients, not server. Send my ID and info to all the other peers
	rpc(\"register_player\", get_tree().get_network_unique_id(), my_info.get_info())

func _server_disconnected():
	# Server kicked us, show error and abort
	print(\"_connected_ok()\")

func _connected_fail():
	# Could not even connect to server, abort
	print(\"_connected_fail()\")

func _add_wizard(id, info):
	var wiz = load(\"res://Wizard.tscn\").instance()
	wiz.set_info(info)
	wiz.name = str(id)
	lobby.add_wizard(wiz)
	player_info[id] = wiz

remote func register_player(id, info):
	print(\"register_player(\" + str(id) + \", \" + str(info) + \")\")
	# If I'm the server, let the new guy know about existing players
	if get_tree().is_network_server():
		# Send the info of existing players
		for peer_id in player_info:
			rpc_id(id, \"register_player\", peer_id, player_info[peer_id].get_info())
	# Store the info
	_add_wizard(id, info)

func show_combat(wiz1, wiz2):
	combat.init_1v1(wiz1, wiz2)
	lobby.hide()
	combat.show()

func show_lobby():
	combat.hide()
	lobby.show()"

[node name="Game" type="Control" index="0"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
script = SubResource( 1 )

[node name="StartScreen" parent="." index="0" instance=ExtResource( 1 )]

[node name="Lobby" parent="." index="1" instance=ExtResource( 2 )]

visible = false

[node name="CombatUI" parent="." index="2" instance=ExtResource( 3 )]

visible = false

[node name="SpellBook" parent="." index="3" instance=ExtResource( 4 )]

visible = false
margin_left = 287.0
margin_top = 1.0
margin_right = 782.0
margin_bottom = 598.0


